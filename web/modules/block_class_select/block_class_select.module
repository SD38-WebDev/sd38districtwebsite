<?php

/**
 * @file
 * Allow administrator defined options for block classes.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 */
function block_class_select_form_block_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // @var \Drupal\block\BlockInterface $block
  $block = $form_state->getFormObject()->getEntity();
  $config = \Drupal::config('block_class_select.settings');
  $label = $config->get('label');
  $description = $config->get('description');
  $multiple = $config->get('multiple');
  
  $options = $config->get('classes');
  // No predefined classes available, so don't alter form
  if (!count($options)) {
    return;
  }

  // Add new form element to handle select options so we can leave the default
  // block class field alone.
  $form['third_party_settings']['block_class_select']['selected_classes'] = array(
    '#type' => 'select',
    '#title' => ($label ? \Drupal\Component\Utility\Xss::filter($label) : t('Block Class Select')),
    '#description' => ($description ? \Drupal\Component\Utility\Xss::filter($description) : t('Select one or more classes.')),
    '#multiple' => $multiple,
    '#options' => $options,
    '#default_value' => preg_split('/\s+/', $block->getThirdPartySetting('block_class', 'classes')),
    '#empty_option' => t('-- None --'),
    '#empty_value' => '',
    '#access' => \Drupal::currentUser()->hasPermission('select block class select classes'),
  );

  // Only allow users with proper permissions to add classes in the default textfield
  $form['third_party_settings']['block_class']['classes']['#access'] = \Drupal::currentUser()->hasPermission('enter classes in block class textfield');

  // Alter block class textfield default values to strip out our predefined options.
  $block_class_classes = preg_split('/\s+/', $block->getThirdPartySetting('block_class', 'classes'));
  // Create new array with keys and values identical.
  $saved_classes = array();
  foreach ($block_class_classes as $key => $value) {
    $class = trim($value);
    $saved_classes[$class] = $class;
  }
  $block_class = array_diff_key($saved_classes, $options);
  $form['third_party_settings']['block_class']['classes']['#default_value'] = implode(' ', $block_class);
  
  // Rearrange callbacks so this ours runs earlier.
  $callbacks = $form['actions']['submit']['#submit'];
  array_unshift($callbacks, 'block_class_select_form_alter_submit');
  $form['actions']['submit']['#submit'] = $callbacks;
}

/**
 * Submit handler for the block configuration form.
 */
function block_class_select_form_alter_submit(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $config = \Drupal::config('block_class_select.settings');
  $multiple = $config->get('multiple');

  if ($multiple) {
    // Get classes out of the array created by allowing multiple values in the select element - block class is expecting a string.
    $classes = implode(' ', $form_state->getValue(['third_party_settings', 'block_class_select', 'selected_classes']));
  }
  else {
    $classes = $form_state->getValue(['third_party_settings', 'block_class_select', 'selected_classes']);
  }
  
  if (empty($form_state->getValue(['third_party_settings', 'block_class', 'classes']))) {
    $form_state->setValue(['third_party_settings', 'block_class', 'classes'], $classes);
  }
  else {
    $form_state->setValue(['third_party_settings', 'block_class', 'classes'], $form_state->getValue(['third_party_settings', 'block_class', 'classes']) . ' ' . $classes);
  }
}
